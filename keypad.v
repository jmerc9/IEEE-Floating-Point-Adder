
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module keypad(
	input 					clk,
	input 					rst,
	input 					scan,
	
	output reg 	[3:0] 	data,
	
	inout 		[7:0] 	data_in
);

	parameter 	[1:0] 	S0 = 2'b00,
								S1 = 2'b01,
								S2 = 2'b11,
								S3 = 2'b10;

	reg 	[1:0] 	cur_state;
	reg 	[3:0] 	row;

	wire 	[3:0] 	column;
	
	assign 		data_in[7:4] = row;
	assign 		column = data_in[3:0];
	assign 		HEX0 = data; 
	
	initial begin
		cur_state = S0;
		row = 4'b0000;
	end
	
	always @ (posedge clk) begin
		if (rst) begin
			cur_state = S0;
			row = 4'b0000;
		end
		
		else if (scan == 1'b1) begin
			case(cur_state)
				S0: begin //Checking if press is in top row
					row <= 4'b0100;
					
					if (column == 4'b1000) data <= 4'h1;
					else if (column == 4'b0100) data <= 4'h2;
					else if (column == 4'b0010) data <= 4'h3;
					else if (column == 4'b0001) data <= 4'hA;
					
					cur_state <= S1;
				end
				
				S1: begin //Checking if press is in top middle row
					row <= 4'b0010;
					
					if (column == 4'b1000) data <= 4'h4;
					else if (column == 4'b0100) data <= 4'h5;
					else if (column == 4'b0010) data <= 4'h6;
					else if (column == 4'b0001) data <= 4'hB;
					
					cur_state <= S2;
				end
				
				S2: begin //Checking if press is in bottom middle row
					row <= 4'b0001;
					
					if (column == 4'b1000) data <= 4'h7;
					else if (column == 4'b0100) data <= 4'h8;
					else if (column == 4'b0010) data <= 4'h9;
					else if (column == 4'b0001) data <= 4'hC;
					
					cur_state <= S3;
				end
				
				S3: begin //Checking if press is in bottom row
					row <= 4'b1000;
					
					if (column == 4'b1000) data <= 4'h1E;
					else if (column == 4'b0100) data <= 4'h0;
					else if (column == 4'b0010) data <= 4'hF;
					else if (column == 4'b0001) data <= 4'hD;
					
					cur_state <= S0;
				end
			endcase
		end
		
		else data <= 4'bZZZZ;
	end

endmodule
